//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Delfin.Principal.AppService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AppService.IDelfinService")]
    public interface IDelfinService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelfinService/ExecuteSQL", ReplyAction="http://tempuri.org/IDelfinService/ExecuteSQLResponse")]
        System.Data.DataSet ExecuteSQL(string QueryString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelfinService/NewExecuteSQL", ReplyAction="http://tempuri.org/IDelfinService/NewExecuteSQLResponse")]
        System.Data.DataSet NewExecuteSQL(string QueryString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelfinService/ExecuteSQLNonQuery", ReplyAction="http://tempuri.org/IDelfinService/ExecuteSQLNonQueryResponse")]
        bool ExecuteSQLNonQuery(string QueryString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelfinService/NewExecuteSQLNonQuery", ReplyAction="http://tempuri.org/IDelfinService/NewExecuteSQLNonQueryResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] NewExecuteSQLNonQuery(string QueryString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelfinService/GetActiveDirectoryObjects", ReplyAction="http://tempuri.org/IDelfinService/GetActiveDirectoryObjectsResponse")]
        System.Data.DataSet GetActiveDirectoryObjects(string DirectoryEntry, string DirectoryUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelfinService/UserValidation", ReplyAction="http://tempuri.org/IDelfinService/UserValidationResponse")]
        string UserValidation(string DirectoryEntry, string DirectoryUserName, string DirectoryPassword, string ErrorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelfinService/GenerateNextSisVoucher", ReplyAction="http://tempuri.org/IDelfinService/GenerateNextSisVoucherResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] GenerateNextSisVoucher(string Company, System.Data.DataSet dsVoucher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelfinService/GenerateNextSisVoucherBCopy", ReplyAction="http://tempuri.org/IDelfinService/GenerateNextSisVoucherBCopyResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] GenerateNextSisVoucherBCopy(string Company, System.Data.DataSet dsVoucher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelfinService/GenerateNextSoftVoucher", ReplyAction="http://tempuri.org/IDelfinService/GenerateNextSoftVoucherResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] GenerateNextSoftVoucher(System.Data.DataTable dtMovimiento, System.Data.DataTable dtCtaCte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelfinService/InsertarContribuyente", ReplyAction="http://tempuri.org/IDelfinService/InsertarContribuyenteResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] InsertarContribuyente(System.Data.DataTable dtSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelfinService/ActualizarContribuyente", ReplyAction="http://tempuri.org/IDelfinService/ActualizarContribuyenteResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] ActualizarContribuyente(System.Data.DataTable dtSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelfinService/UpdateTableWithBulkCopy", ReplyAction="http://tempuri.org/IDelfinService/UpdateTableWithBulkCopyResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] UpdateTableWithBulkCopy(string Table, System.Data.DataTable dtSource, string ProcessType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelfinService/UpdatingUsingTableAsParameter", ReplyAction="http://tempuri.org/IDelfinService/UpdatingUsingTableAsParameterResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] UpdatingUsingTableAsParameter(string StoreProcedure, System.Data.DataTable dtSource);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDelfinServiceChannel : Delfin.Principal.AppService.IDelfinService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DelfinServiceClient : System.ServiceModel.ClientBase<Delfin.Principal.AppService.IDelfinService>, Delfin.Principal.AppService.IDelfinService {
        
        public DelfinServiceClient() {
        }
        
        public DelfinServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DelfinServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DelfinServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DelfinServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet ExecuteSQL(string QueryString) {
            return base.Channel.ExecuteSQL(QueryString);
        }
        
        public System.Data.DataSet NewExecuteSQL(string QueryString) {
            return base.Channel.NewExecuteSQL(QueryString);
        }
        
        public bool ExecuteSQLNonQuery(string QueryString) {
            return base.Channel.ExecuteSQLNonQuery(QueryString);
        }
        
        public object[] NewExecuteSQLNonQuery(string QueryString) {
            return base.Channel.NewExecuteSQLNonQuery(QueryString);
        }
        
        public System.Data.DataSet GetActiveDirectoryObjects(string DirectoryEntry, string DirectoryUserName) {
            return base.Channel.GetActiveDirectoryObjects(DirectoryEntry, DirectoryUserName);
        }
        
        public string UserValidation(string DirectoryEntry, string DirectoryUserName, string DirectoryPassword, string ErrorMessage) {
            return base.Channel.UserValidation(DirectoryEntry, DirectoryUserName, DirectoryPassword, ErrorMessage);
        }
        
        public object[] GenerateNextSisVoucher(string Company, System.Data.DataSet dsVoucher) {
            return base.Channel.GenerateNextSisVoucher(Company, dsVoucher);
        }
        
        public object[] GenerateNextSisVoucherBCopy(string Company, System.Data.DataSet dsVoucher) {
            return base.Channel.GenerateNextSisVoucherBCopy(Company, dsVoucher);
        }
        
        public object[] GenerateNextSoftVoucher(System.Data.DataTable dtMovimiento, System.Data.DataTable dtCtaCte) {
            return base.Channel.GenerateNextSoftVoucher(dtMovimiento, dtCtaCte);
        }
        
        public object[] InsertarContribuyente(System.Data.DataTable dtSource) {
            return base.Channel.InsertarContribuyente(dtSource);
        }
        
        public object[] ActualizarContribuyente(System.Data.DataTable dtSource) {
            return base.Channel.ActualizarContribuyente(dtSource);
        }
        
        public object[] UpdateTableWithBulkCopy(string Table, System.Data.DataTable dtSource, string ProcessType) {
            return base.Channel.UpdateTableWithBulkCopy(Table, dtSource, ProcessType);
        }
        
        public object[] UpdatingUsingTableAsParameter(string StoreProcedure, System.Data.DataTable dtSource) {
            return base.Channel.UpdatingUsingTableAsParameter(StoreProcedure, dtSource);
        }
    }
}
