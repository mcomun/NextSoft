//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Delfin.Principal.OnLineService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OnLineService.IOnLineService")]
    public interface IOnLineService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetData", ReplyAction="http://tempuri.org/IOnLineService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetData", ReplyAction="http://tempuri.org/IOnLineService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IOnLineService/GetDataUsingDataContractResponse")]
        ApplicationForm.OnLineService.CompositeType GetDataUsingDataContract(ApplicationForm.OnLineService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IOnLineService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ApplicationForm.OnLineService.CompositeType> GetDataUsingDataContractAsync(ApplicationForm.OnLineService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/ExecuteSQL", ReplyAction="http://tempuri.org/IOnLineService/ExecuteSQLResponse")]
        System.Data.DataSet ExecuteSQL(string QueryString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/ExecuteSQL", ReplyAction="http://tempuri.org/IOnLineService/ExecuteSQLResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ExecuteSQLAsync(string QueryString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/ExecuteSQLNonQuery", ReplyAction="http://tempuri.org/IOnLineService/ExecuteSQLNonQueryResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.EntidadVinculada_BE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.EntidadRegistro_BE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.CompositeType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.VoyageQueryDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.VoyageQueryDTO))]
        object[] ExecuteSQLNonQuery(string QueryString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/ExecuteSQLNonQuery", ReplyAction="http://tempuri.org/IOnLineService/ExecuteSQLNonQueryResponse")]
        System.Threading.Tasks.Task<object[]> ExecuteSQLNonQueryAsync(string QueryString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/VoyageQuery", ReplyAction="http://tempuri.org/IOnLineService/VoyageQueryResponse")]
        System.Data.DataTable VoyageQuery(int Days);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/VoyageQuery", ReplyAction="http://tempuri.org/IOnLineService/VoyageQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> VoyageQueryAsync(int Days);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/VoyageQueryList", ReplyAction="http://tempuri.org/IOnLineService/VoyageQueryListResponse")]
        ApplicationForm.OnLineService.VoyageQueryDTO[] VoyageQueryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/VoyageQueryList", ReplyAction="http://tempuri.org/IOnLineService/VoyageQueryListResponse")]
        System.Threading.Tasks.Task<ApplicationForm.OnLineService.VoyageQueryDTO[]> VoyageQueryListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/InvoicingQuery", ReplyAction="http://tempuri.org/IOnLineService/InvoicingQueryResponse")]
        System.Data.DataTable InvoicingQuery(int CustomerCode, System.DateTime DateFrom, System.DateTime DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/InvoicingQuery", ReplyAction="http://tempuri.org/IOnLineService/InvoicingQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> InvoicingQueryAsync(int CustomerCode, System.DateTime DateFrom, System.DateTime DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CargoNoticeQuery", ReplyAction="http://tempuri.org/IOnLineService/CargoNoticeQueryResponse")]
        System.Data.DataSet CargoNoticeQuery(string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CargoNoticeQuery", ReplyAction="http://tempuri.org/IOnLineService/CargoNoticeQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> CargoNoticeQueryAsync(string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetVoyageByCustomer", ReplyAction="http://tempuri.org/IOnLineService/GetVoyageByCustomerResponse")]
        System.Data.DataTable GetVoyageByCustomer(int CustomerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetVoyageByCustomer", ReplyAction="http://tempuri.org/IOnLineService/GetVoyageByCustomerResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetVoyageByCustomerAsync(int CustomerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CargoAddressingQuery", ReplyAction="http://tempuri.org/IOnLineService/CargoAddressingQueryResponse")]
        System.Data.DataTable CargoAddressingQuery(int CustomerCode, int Voyage, string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CargoAddressingQuery", ReplyAction="http://tempuri.org/IOnLineService/CargoAddressingQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> CargoAddressingQueryAsync(int CustomerCode, int Voyage, string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CustomerDocumentQuery", ReplyAction="http://tempuri.org/IOnLineService/CustomerDocumentQueryResponse")]
        System.Data.DataTable CustomerDocumentQuery(string DocumentType, string DocumentNUmber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CustomerDocumentQuery", ReplyAction="http://tempuri.org/IOnLineService/CustomerDocumentQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> CustomerDocumentQueryAsync(string DocumentType, string DocumentNUmber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CustomerDebtQuery", ReplyAction="http://tempuri.org/IOnLineService/CustomerDebtQueryResponse")]
        System.Data.DataTable CustomerDebtQuery(int CustomerCode, string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CustomerDebtQuery", ReplyAction="http://tempuri.org/IOnLineService/CustomerDebtQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> CustomerDebtQueryAsync(int CustomerCode, string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/HBLStatusQuery", ReplyAction="http://tempuri.org/IOnLineService/HBLStatusQueryResponse")]
        System.Data.DataTable HBLStatusQuery(string HouseBL, int CustomerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/HBLStatusQuery", ReplyAction="http://tempuri.org/IOnLineService/HBLStatusQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> HBLStatusQueryAsync(string HouseBL, int CustomerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/RelatedCompanyQuery", ReplyAction="http://tempuri.org/IOnLineService/RelatedCompanyQueryResponse")]
        System.Data.DataTable RelatedCompanyQuery(int CompanyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/RelatedCompanyQuery", ReplyAction="http://tempuri.org/IOnLineService/RelatedCompanyQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> RelatedCompanyQueryAsync(int CompanyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/InsertRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/InsertRelatedCompanyResponse")]
        void InsertRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/InsertRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/InsertRelatedCompanyResponse")]
        System.Threading.Tasks.Task InsertRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/UpdateRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/UpdateRelatedCompanyResponse")]
        void UpdateRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/UpdateRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/UpdateRelatedCompanyResponse")]
        System.Threading.Tasks.Task UpdateRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/StatusUpdateRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/StatusUpdateRelatedCompanyResponse")]
        void StatusUpdateRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/StatusUpdateRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/StatusUpdateRelatedCompanyResponse")]
        System.Threading.Tasks.Task StatusUpdateRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/DeleteRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/DeleteRelatedCompanyResponse")]
        void DeleteRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/DeleteRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/DeleteRelatedCompanyResponse")]
        System.Threading.Tasks.Task DeleteRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/GetAllRelatedCompanyResponse")]
        ApplicationForm.OnLineService.EntidadVinculada_BE GetAllRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/GetAllRelatedCompanyResponse")]
        System.Threading.Tasks.Task<ApplicationForm.OnLineService.EntidadVinculada_BE> GetAllRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllDataTableRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/GetAllDataTableRelatedCompanyResponse")]
        System.Data.DataTable GetAllDataTableRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllDataTableRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/GetAllDataTableRelatedCompanyResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllDataTableRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetDataList", ReplyAction="http://tempuri.org/IOnLineService/GetDataListResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.EntidadVinculada_BE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.EntidadRegistro_BE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.CompositeType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.VoyageQueryDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.VoyageQueryDTO))]
        System.Data.DataTable GetDataList(string TableName, object[] Params);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetDataList", ReplyAction="http://tempuri.org/IOnLineService/GetDataListResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetDataListAsync(string TableName, object[] Params);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/GetRelatedCompanyResponse")]
        System.Data.DataTable GetRelatedCompany(string DocumentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/GetRelatedCompanyResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRelatedCompanyAsync(string DocumentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetDataByEntityType", ReplyAction="http://tempuri.org/IOnLineService/GetDataByEntityTypeResponse")]
        System.Data.DataSet GetDataByEntityType(int EntityType, string DocumentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetDataByEntityType", ReplyAction="http://tempuri.org/IOnLineService/GetDataByEntityTypeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDataByEntityTypeAsync(int EntityType, string DocumentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/InsertCustomerRegister", ReplyAction="http://tempuri.org/IOnLineService/InsertCustomerRegisterResponse")]
        void InsertCustomerRegister(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/InsertCustomerRegister", ReplyAction="http://tempuri.org/IOnLineService/InsertCustomerRegisterResponse")]
        System.Threading.Tasks.Task InsertCustomerRegisterAsync(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/StatusUpdateCustomerRegister", ReplyAction="http://tempuri.org/IOnLineService/StatusUpdateCustomerRegisterResponse")]
        void StatusUpdateCustomerRegister(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/StatusUpdateCustomerRegister", ReplyAction="http://tempuri.org/IOnLineService/StatusUpdateCustomerRegisterResponse")]
        System.Threading.Tasks.Task StatusUpdateCustomerRegisterAsync(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllDataTableCustomerRegister", ReplyAction="http://tempuri.org/IOnLineService/GetAllDataTableCustomerRegisterResponse")]
        System.Data.DataTable GetAllDataTableCustomerRegister(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllDataTableCustomerRegister", ReplyAction="http://tempuri.org/IOnLineService/GetAllDataTableCustomerRegisterResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllDataTableCustomerRegisterAsync(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOnLineServiceChannel : Delfin.Principal.OnLineService.IOnLineService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OnLineServiceClient : System.ServiceModel.ClientBase<Delfin.Principal.OnLineService.IOnLineService>, Delfin.Principal.OnLineService.IOnLineService {
        
        public OnLineServiceClient() {
        }
        
        public OnLineServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OnLineServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OnLineServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OnLineServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ApplicationForm.OnLineService.CompositeType GetDataUsingDataContract(ApplicationForm.OnLineService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ApplicationForm.OnLineService.CompositeType> GetDataUsingDataContractAsync(ApplicationForm.OnLineService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public System.Data.DataSet ExecuteSQL(string QueryString) {
            return base.Channel.ExecuteSQL(QueryString);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ExecuteSQLAsync(string QueryString) {
            return base.Channel.ExecuteSQLAsync(QueryString);
        }
        
        public object[] ExecuteSQLNonQuery(string QueryString) {
            return base.Channel.ExecuteSQLNonQuery(QueryString);
        }
        
        public System.Threading.Tasks.Task<object[]> ExecuteSQLNonQueryAsync(string QueryString) {
            return base.Channel.ExecuteSQLNonQueryAsync(QueryString);
        }
        
        public System.Data.DataTable VoyageQuery(int Days) {
            return base.Channel.VoyageQuery(Days);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> VoyageQueryAsync(int Days) {
            return base.Channel.VoyageQueryAsync(Days);
        }
        
        public ApplicationForm.OnLineService.VoyageQueryDTO[] VoyageQueryList() {
            return base.Channel.VoyageQueryList();
        }
        
        public System.Threading.Tasks.Task<ApplicationForm.OnLineService.VoyageQueryDTO[]> VoyageQueryListAsync() {
            return base.Channel.VoyageQueryListAsync();
        }
        
        public System.Data.DataTable InvoicingQuery(int CustomerCode, System.DateTime DateFrom, System.DateTime DateTo) {
            return base.Channel.InvoicingQuery(CustomerCode, DateFrom, DateTo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> InvoicingQueryAsync(int CustomerCode, System.DateTime DateFrom, System.DateTime DateTo) {
            return base.Channel.InvoicingQueryAsync(CustomerCode, DateFrom, DateTo);
        }
        
        public System.Data.DataSet CargoNoticeQuery(string HouseBL) {
            return base.Channel.CargoNoticeQuery(HouseBL);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CargoNoticeQueryAsync(string HouseBL) {
            return base.Channel.CargoNoticeQueryAsync(HouseBL);
        }
        
        public System.Data.DataTable GetVoyageByCustomer(int CustomerCode) {
            return base.Channel.GetVoyageByCustomer(CustomerCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetVoyageByCustomerAsync(int CustomerCode) {
            return base.Channel.GetVoyageByCustomerAsync(CustomerCode);
        }
        
        public System.Data.DataTable CargoAddressingQuery(int CustomerCode, int Voyage, string HouseBL) {
            return base.Channel.CargoAddressingQuery(CustomerCode, Voyage, HouseBL);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> CargoAddressingQueryAsync(int CustomerCode, int Voyage, string HouseBL) {
            return base.Channel.CargoAddressingQueryAsync(CustomerCode, Voyage, HouseBL);
        }
        
        public System.Data.DataTable CustomerDocumentQuery(string DocumentType, string DocumentNUmber) {
            return base.Channel.CustomerDocumentQuery(DocumentType, DocumentNUmber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> CustomerDocumentQueryAsync(string DocumentType, string DocumentNUmber) {
            return base.Channel.CustomerDocumentQueryAsync(DocumentType, DocumentNUmber);
        }
        
        public System.Data.DataTable CustomerDebtQuery(int CustomerCode, string HouseBL) {
            return base.Channel.CustomerDebtQuery(CustomerCode, HouseBL);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> CustomerDebtQueryAsync(int CustomerCode, string HouseBL) {
            return base.Channel.CustomerDebtQueryAsync(CustomerCode, HouseBL);
        }
        
        public System.Data.DataTable HBLStatusQuery(string HouseBL, int CustomerCode) {
            return base.Channel.HBLStatusQuery(HouseBL, CustomerCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> HBLStatusQueryAsync(string HouseBL, int CustomerCode) {
            return base.Channel.HBLStatusQueryAsync(HouseBL, CustomerCode);
        }
        
        public System.Data.DataTable RelatedCompanyQuery(int CompanyCode) {
            return base.Channel.RelatedCompanyQuery(CompanyCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> RelatedCompanyQueryAsync(int CompanyCode) {
            return base.Channel.RelatedCompanyQueryAsync(CompanyCode);
        }
        
        public void InsertRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            base.Channel.InsertRelatedCompany(oRelatedCompany);
        }
        
        public System.Threading.Tasks.Task InsertRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.InsertRelatedCompanyAsync(oRelatedCompany);
        }
        
        public void UpdateRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            base.Channel.UpdateRelatedCompany(oRelatedCompany);
        }
        
        public System.Threading.Tasks.Task UpdateRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.UpdateRelatedCompanyAsync(oRelatedCompany);
        }
        
        public void StatusUpdateRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            base.Channel.StatusUpdateRelatedCompany(oRelatedCompany);
        }
        
        public System.Threading.Tasks.Task StatusUpdateRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.StatusUpdateRelatedCompanyAsync(oRelatedCompany);
        }
        
        public void DeleteRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            base.Channel.DeleteRelatedCompany(oRelatedCompany);
        }
        
        public System.Threading.Tasks.Task DeleteRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.DeleteRelatedCompanyAsync(oRelatedCompany);
        }
        
        public ApplicationForm.OnLineService.EntidadVinculada_BE GetAllRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.GetAllRelatedCompany(oRelatedCompany);
        }
        
        public System.Threading.Tasks.Task<ApplicationForm.OnLineService.EntidadVinculada_BE> GetAllRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.GetAllRelatedCompanyAsync(oRelatedCompany);
        }
        
        public System.Data.DataTable GetAllDataTableRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.GetAllDataTableRelatedCompany(oRelatedCompany);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllDataTableRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.GetAllDataTableRelatedCompanyAsync(oRelatedCompany);
        }
        
        public System.Data.DataTable GetDataList(string TableName, object[] Params) {
            return base.Channel.GetDataList(TableName, Params);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetDataListAsync(string TableName, object[] Params) {
            return base.Channel.GetDataListAsync(TableName, Params);
        }
        
        public System.Data.DataTable GetRelatedCompany(string DocumentNumber) {
            return base.Channel.GetRelatedCompany(DocumentNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRelatedCompanyAsync(string DocumentNumber) {
            return base.Channel.GetRelatedCompanyAsync(DocumentNumber);
        }
        
        public System.Data.DataSet GetDataByEntityType(int EntityType, string DocumentNumber) {
            return base.Channel.GetDataByEntityType(EntityType, DocumentNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDataByEntityTypeAsync(int EntityType, string DocumentNumber) {
            return base.Channel.GetDataByEntityTypeAsync(EntityType, DocumentNumber);
        }
        
        public void InsertCustomerRegister(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister) {
            base.Channel.InsertCustomerRegister(oCustomerRegister);
        }
        
        public System.Threading.Tasks.Task InsertCustomerRegisterAsync(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister) {
            return base.Channel.InsertCustomerRegisterAsync(oCustomerRegister);
        }
        
        public void StatusUpdateCustomerRegister(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister) {
            base.Channel.StatusUpdateCustomerRegister(oCustomerRegister);
        }
        
        public System.Threading.Tasks.Task StatusUpdateCustomerRegisterAsync(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister) {
            return base.Channel.StatusUpdateCustomerRegisterAsync(oCustomerRegister);
        }
        
        public System.Data.DataTable GetAllDataTableCustomerRegister(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister) {
            return base.Channel.GetAllDataTableCustomerRegister(oCustomerRegister);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllDataTableCustomerRegisterAsync(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister) {
            return base.Channel.GetAllDataTableCustomerRegisterAsync(oCustomerRegister);
        }
    }
}
